LAMMPS (28 Jun 2014)
# Reference: M. Orsi, Comparative assessment of the ELBA coarse-grained
# model for water, Molecular Physics, DOI:10.1080/00268976.2013.844373

units real
atom_style full
read_data data.singleSPC
  orthogonal box = (0 0 0) to (3.1 3.1 3.1)
  1 by 2 by 2 MPI processor grid
  reading atoms ...
  3 atoms
  scanning bonds ...
  2 = max bonds/atom
  scanning angles ...
  1 = max angles/atom
  reading bonds ...
  2 bonds
  reading angles ...
  1 angles
  2 = max # of 1-2 neighbors
  1 = max # of 1-3 neighbors
  1 = max # of 1-4 neighbors
  2 = max # of special neighbors
include data.forcefieldSPC
# Berendsen et al, in "Intermolecular forces", p. 331 (1981)
# Charges and geometry are specified in the "data." file.

mass 1 1.00794 # H
mass 2 15.9994 # O

#pair_style lj/cut/coul/long 10.0

#pair_coeff 1 1 0.00000 0.000
#pair_coeff 1 2 0.00000 0.000
#pair_coeff 2 2 0.15535 3.166

#bond_style harmonic
#bond_coeff 1 0.0 1.0

#angle_style harmonic
#angle_coeff 1 0.0 109.47

#-------------------------------------------------
pair_style	 lj/cut/coul/long 9.8 9.8
kspace_style	 pppm 1.0e-4

pair_coeff	 1 1 0.15535 3.166
pair_coeff	 * 2 0.00000 0.0000

bond_style	 harmonic
angle_style	 harmonic
dihedral_style	 none
improper_style	 none

bond_coeff	 1 1000.00 1.000
angle_coeff	 1 100.0 109.47

special_bonds    lj/coul 0.0 0.0 0.5
  2 = max # of 1-2 neighbors
  1 = max # of 1-3 neighbors
  1 = max # of 1-4 neighbors
  2 = max # of special neighbors
pair_modify tail yes
kspace_style pppm 1.0e-5

replicate 1 1 1
  orthogonal box = (0 0 0) to (3.1 3.1 3.1)
  1 by 2 by 2 MPI processor grid
  3 atoms
  2 bonds
  1 angles
  2 = max # of 1-2 neighbors
  1 = max # of 1-3 neighbors
  1 = max # of 1-4 neighbors
  2 = max # of special neighbors

variable dumplocation string ./run_water_LAMMPS/dump_2014-09-18/  # location of the dump files

variable Nrun equal 10000               # Timesteps
variable Tstep equal 0.1                 # timestep
variable Nf equal ${Nrun}/100            # Print to screen every Nf timestep, Nf = Nfreq
variable Nf equal 10000/100            
variable Ne equal 10                     # use every Ne timestep in ave/time output
variable Nr equal ${Nf}/${Ne}            # Number of timesteps to use in average
variable Nr equal 100/${Ne}            
variable Nr equal 100/10            
variable Ndump equal 1000                # Timesteps to dump
variable Nr_rdf equal 0.5*${Nrun}/${Ne}  # Number of timesteps to use in average in rdf sim.
variable Nr_rdf equal 0.5*10000/${Ne}  
variable Nr_rdf equal 0.5*10000/10  

variable watMoleMass equal 18.0153                       # /(g/mol)
variable nAvog equal 6.0221415e23                        # Avogadro's number
variable watMoleculeMass equal (${watMoleMass}/${nAvog}) # /(g/molecule)
variable watMoleculeMass equal (18.0153/${nAvog}) 
variable watMoleculeMass equal (18.0153/6.0221415e+23) 
variable A3_in_cm3 equal 1e-24                           # Angstrom^3 in cm^3
variable nAtoms equal atoms                              # Number of atoms
variable nMolecules equal v_nAtoms/3                     # Number of molecules
variable Nbonds equal v_nMolecules*2                     # 2 bonds per molecule

variable Text equal 298.0                                # external temperature 25C
variable Pext equal 1.0                                  # 1atm pressure

group hydrogen type 1
2 atoms in group hydrogen
group oxygen type 2
1 atoms in group oxygen
group OH type 1 2
3 atoms in group OH

velocity all create ${Text} 1234                         # start at external temperature
velocity all create 298 1234                         

neighbor 2.0 bin
neigh_modify every 1 delay 0 check yes

timestep ${Tstep}
timestep 0.1

#fix ID group-ID shake 1.0e-4 tolerance maxIter b=bondtypes bondtype1... a=atomtypes atomtype1....
#fix constrain all shake 1.0e-4 100 10 b 1 a 1
#fix integrate all nvt temp ${Text} ${Text} 100.0
fix integrate all npt temp ${Text} ${Text} 100.0 iso ${Pext} ${Pext} 1000.0
fix integrate all npt temp 298 ${Text} 100.0 iso ${Pext} ${Pext} 1000.0
fix integrate all npt temp 298 298 100.0 iso ${Pext} ${Pext} 1000.0
fix integrate all npt temp 298 298 100.0 iso 1 ${Pext} 1000.0
fix integrate all npt temp 298 298 100.0 iso 1 1 1000.0
fix removeMomentum all momentum 1 linear 1 1 1

print "----------------DUMPLOCATION-----------------------"
----------------DUMPLOCATION-----------------------
variable dumpWater string ${dumplocation}dump.water_LAMMPS
variable dumpWater string ./run_water_LAMMPS/dump_2014-09-18/dump.water_LAMMPS
variable dumpState string ${dumplocation}water.*.txt
variable dumpState string ./run_water_LAMMPS/dump_2014-09-18/water.*.txt
variable dumpRestart string ${dumplocation}restart_water.*.txt
variable dumpRestart string ./run_water_LAMMPS/dump_2014-09-18/restart_water.*.txt
print "dump water        = ${dumpWater}"
dump water        = ./run_water_LAMMPS/dump_2014-09-18/dump.water_LAMMPS
print "dump states       = ${dumpState}"
dump states       = ./run_water_LAMMPS/dump_2014-09-18/water.*.txt
print "restart file      = ${dumpRestart}"
restart file      = ./run_water_LAMMPS/dump_2014-09-18/restart_water.*.txt
print "---------------------------------------------------"
---------------------------------------------------

#-------------------COMPUTES--------------------------------------------------------
compute T all temp
fix TempAve all ave/time ${Ne} ${Nr} ${Nf} c_T
fix TempAve all ave/time 10 ${Nr} ${Nf} c_T
fix TempAve all ave/time 10 10 ${Nf} c_T
fix TempAve all ave/time 10 10 100 c_T

variable P equal press
fix PressAve all ave/time ${Ne} ${Nr} ${Nf} v_P
fix PressAve all ave/time 10 ${Nr} ${Nf} v_P
fix PressAve all ave/time 10 10 ${Nf} v_P
fix PressAve all ave/time 10 10 100 v_P

compute PE all pe pair kspace
variable PE_Mol equal c_PE/v_nMolecules
fix PEAve_Mol all ave/time ${Ne} ${Nr} ${Nf} v_PE_Mol
fix PEAve_Mol all ave/time 10 ${Nr} ${Nf} v_PE_Mol
fix PEAve_Mol all ave/time 10 10 ${Nf} v_PE_Mol
fix PEAve_Mol all ave/time 10 10 100 v_PE_Mol

variable Dens equal v_nMolecules*${watMoleculeMass}/(vol*${A3_in_cm3})    # is this the right way of calculating the density of water?
variable Dens equal v_nMolecules*2.99151057808921e-23/(vol*${A3_in_cm3})    
variable Dens equal v_nMolecules*2.99151057808921e-23/(vol*1e-24)    
fix DensAve all ave/time ${Ne} ${Nr} ${Nf} v_Dens file density_water.txt
fix DensAve all ave/time 10 ${Nr} ${Nf} v_Dens file density_water.txt
fix DensAve all ave/time 10 10 ${Nf} v_Dens file density_water.txt
fix DensAve all ave/time 10 10 100 v_Dens file density_water.txt

compute rdf all rdf 1000 2 2 # oxygen-oxygen
fix rdf all ave/time ${Ne} ${Nr_rdf} ${Nrun} c_rdf file rdf_water.txt mode vector
fix rdf all ave/time 10 ${Nr_rdf} ${Nrun} c_rdf file rdf_water.txt mode vector
fix rdf all ave/time 10 500 ${Nrun} c_rdf file rdf_water.txt mode vector
fix rdf all ave/time 10 500 10000 c_rdf file rdf_water.txt mode vector

#------------------MyComputes--------------------------------------------------------

compute     myTemp all temp                     # temperature of group of atoms
compute     TempCOM all temp/com                # temperature of group of atoms subtracting the center-of-mass velocity
compute     msd oxygen msd com yes              # displacement from initial position. Center Of Mass calculation, drift is subtracted
compute     rog OH gyration                     # radius of gyration of the water molecule
compute     bl OH bond/local dist               # returns array of bondlengths
compute     bondl OH reduce sum c_bl            # sums bondlengths !!! Needs to divide by number of bonds !!!

# fix_ave/time    ID group-ID ave/time Nevery Nrepeat Nfreq value1 value2.... keywordargs..

variable    Bondl equal c_bondl/${Nbonds}
variable    Bondl equal c_bondl/2

#fix         dump_water all ave/time 1 100 100 c_myTemp c_TempCOM c_msd[4] c_rog v_Bondl v_Dens v_press file ${dumpWater} mode scalar
#fix         dump_water all ave/time 1 100 100 c_myTemp c_TempCOM c_msd[4] c_rog v_Bondl v_Dens v_press file /run_water_LAMMPS/dump.water_LAMMPS mode scalar

#------------------PRINTS AND DUMPS--------------------------------------------------
thermo_style custom step temp f_TempAve press f_PressAve f_PEAve_Mol f_DensAve etotal pe
thermo_modify flush yes
thermo ${Nf}
thermo 100

#dump trj all atom ${Ndump} ${dumpState}
dump trj all atom ./dump/water.*.txt
ERROR: Illegal dump command (../output.cpp:538)
